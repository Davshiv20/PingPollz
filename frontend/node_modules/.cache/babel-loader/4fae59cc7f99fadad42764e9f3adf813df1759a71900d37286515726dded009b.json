{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { socket } from '../services/socket';\nconst initialState = {\n  messages: [],\n  loading: false,\n  error: null\n};\nexport const sendChatMessage = createAsyncThunk('chat/sendChatMessage', async messageData => {\n  return new Promise((resolve, reject) => {\n    socket.emit('send_chat_message', messageData, response => {\n      if (response.error) {\n        reject(response.error);\n      } else {\n        resolve(response);\n      }\n    });\n  });\n});\nconst chatSlice = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {\n    addMessage: (state, action) => {\n      state.messages.push(action.payload);\n    },\n    clearMessages: state => {\n      state.messages = [];\n    },\n    clearChatError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(sendChatMessage.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(sendChatMessage.fulfilled, state => {\n      state.loading = false;\n    }).addCase(sendChatMessage.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  addMessage,\n  clearMessages,\n  clearChatError\n} = chatSlice.actions;\nexport default chatSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","socket","initialState","messages","loading","error","sendChatMessage","messageData","Promise","resolve","reject","emit","response","chatSlice","name","reducers","addMessage","state","action","push","payload","clearMessages","clearChatError","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","reducer"],"sources":["C:/Users/Shivam Dave/Desktop/polling-system/frontend/src/store/chatSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { socket } from '../services/socket';\r\n\r\nconst initialState = {\r\n  messages: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const sendChatMessage = createAsyncThunk(\r\n  'chat/sendChatMessage',\r\n  async (messageData) => {\r\n    return new Promise((resolve, reject) => {\r\n      socket.emit('send_chat_message', messageData, (response) => {\r\n        if (response.error) {\r\n          reject(response.error);\r\n        } else {\r\n          resolve(response);\r\n        }\r\n      });\r\n    });\r\n  }\r\n);\r\n\r\nconst chatSlice = createSlice({\r\n  name: 'chat',\r\n  initialState,\r\n  reducers: {\r\n    addMessage: (state, action) => {\r\n      state.messages.push(action.payload);\r\n    },\r\n    clearMessages: (state) => {\r\n      state.messages = [];\r\n    },\r\n    clearChatError: (state) => {\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(sendChatMessage.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(sendChatMessage.fulfilled, (state) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(sendChatMessage.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { addMessage, clearMessages, clearChatError } = chatSlice.actions;\r\n\r\nexport default chatSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,MAAM,QAAQ,oBAAoB;AAE3C,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGN,gBAAgB,CAC7C,sBAAsB,EACtB,MAAOO,WAAW,IAAK;EACrB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCT,MAAM,CAACU,IAAI,CAAC,mBAAmB,EAAEJ,WAAW,EAAGK,QAAQ,IAAK;MAC1D,IAAIA,QAAQ,CAACP,KAAK,EAAE;QAClBK,MAAM,CAACE,QAAQ,CAACP,KAAK,CAAC;MACxB,CAAC,MAAM;QACLI,OAAO,CAACG,QAAQ,CAAC;MACnB;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CACF,CAAC;AAED,MAAMC,SAAS,GAAGd,WAAW,CAAC;EAC5Be,IAAI,EAAE,MAAM;EACZZ,YAAY;EACZa,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACd,QAAQ,CAACgB,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACrC,CAAC;IACDC,aAAa,EAAGJ,KAAK,IAAK;MACxBA,KAAK,CAACd,QAAQ,GAAG,EAAE;IACrB,CAAC;IACDmB,cAAc,EAAGL,KAAK,IAAK;MACzBA,KAAK,CAACZ,KAAK,GAAG,IAAI;IACpB;EACF,CAAC;EACDkB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACnB,eAAe,CAACoB,OAAO,EAAGT,KAAK,IAAK;MAC3CA,KAAK,CAACb,OAAO,GAAG,IAAI;MACpBa,KAAK,CAACZ,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDoB,OAAO,CAACnB,eAAe,CAACqB,SAAS,EAAGV,KAAK,IAAK;MAC7CA,KAAK,CAACb,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDqB,OAAO,CAACnB,eAAe,CAACsB,QAAQ,EAAE,CAACX,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACb,OAAO,GAAG,KAAK;MACrBa,KAAK,CAACZ,KAAK,GAAGa,MAAM,CAACb,KAAK,CAACwB,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEb,UAAU;EAAEK,aAAa;EAAEC;AAAe,CAAC,GAAGT,SAAS,CAACiB,OAAO;AAE9E,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}