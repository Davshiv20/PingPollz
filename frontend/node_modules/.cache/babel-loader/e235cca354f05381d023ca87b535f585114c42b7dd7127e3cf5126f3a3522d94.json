{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivam Dave\\\\Desktop\\\\polling-system\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { socket } from './services/socket';\nimport { setCurrentPoll, updatePollResults, setTimeRemaining, pollEnded } from './store/pollSlice';\nimport { addStudent, removeStudent } from './store/studentSlice';\nimport { addMessage } from './store/chatSlice';\nimport PersonaSelector from './components/PersonaSelector';\nimport TeacherDashboard from './components/TeacherDashboard';\nimport StudentDashboard from './components/StudentDashboard';\nimport NameModal from './components/NameModal';\nimport ChatPopup from './components/ChatPopup';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n  const {\n    persona,\n    showNameModal\n  } = useSelector(state => state.ui);\n  const {\n    currentStudent\n  } = useSelector(state => state.student);\n  useEffect(() => {\n    // Socket event listeners\n    socket.on('poll_created', poll => {\n      dispatch(setCurrentPoll(poll));\n      queryClient.invalidateQueries(['currentPoll']);\n    });\n    socket.on('current_poll', data => {\n      dispatch(setCurrentPoll(data.poll));\n      dispatch(setTimeRemaining(data.time_remaining));\n      queryClient.invalidateQueries(['currentPoll']);\n    });\n    socket.on('poll_results_updated', data => {\n      dispatch(updatePollResults(data));\n      queryClient.invalidateQueries(['currentPoll']);\n    });\n    socket.on('poll_ended', data => {\n      dispatch(pollEnded(data));\n      queryClient.invalidateQueries(['currentPoll']);\n      queryClient.invalidateQueries(['polls']);\n    });\n    socket.on('student_joined', data => {\n      dispatch(addStudent(data));\n      queryClient.invalidateQueries(['students']);\n    });\n    socket.on('student_left', data => {\n      dispatch(removeStudent(data));\n      queryClient.invalidateQueries(['students']);\n    });\n    socket.on('chat_message', message => {\n      dispatch(addMessage(message));\n      queryClient.invalidateQueries(['chatMessages']);\n    });\n\n    // Cleanup\n    return () => {\n      socket.off('poll_created');\n      socket.off('current_poll');\n      socket.off('poll_results_updated');\n      socket.off('poll_ended');\n      socket.off('student_joined');\n      socket.off('student_left');\n      socket.off('chat_message');\n    };\n  }, [dispatch, queryClient]);\n  if (!persona) {\n    return /*#__PURE__*/_jsxDEV(PersonaSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n  if (persona === 'student' && !currentStudent && showNameModal) {\n    return /*#__PURE__*/_jsxDEV(NameModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/teacher\",\n        element: persona === 'teacher' ? /*#__PURE__*/_jsxDEV(TeacherDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/student\",\n        element: persona === 'student' ? /*#__PURE__*/_jsxDEV(StudentDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: `/${persona}`,\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatPopup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"06PgjdCyHpgnENfZUkF97qKHwdY=\", false, function () {\n  return [useDispatch, useQueryClient, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","Routes","Route","Navigate","useQueryClient","socket","setCurrentPoll","updatePollResults","setTimeRemaining","pollEnded","addStudent","removeStudent","addMessage","PersonaSelector","TeacherDashboard","StudentDashboard","NameModal","ChatPopup","jsxDEV","_jsxDEV","App","_s","dispatch","queryClient","persona","showNameModal","state","ui","currentStudent","student","on","poll","invalidateQueries","data","time_remaining","message","off","fileName","_jsxFileName","lineNumber","columnNumber","className","children","path","element","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/Shivam Dave/Desktop/polling-system/frontend/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport { useQueryClient } from '@tanstack/react-query';\r\nimport { socket } from './services/socket';\r\nimport {\r\n  setCurrentPoll,\r\n  updatePollResults,\r\n  setTimeRemaining,\r\n  pollEnded,\r\n} from './store/pollSlice';\r\nimport { addStudent, removeStudent } from './store/studentSlice';\r\nimport { addMessage } from './store/chatSlice';\r\nimport PersonaSelector from './components/PersonaSelector';\r\nimport TeacherDashboard from './components/TeacherDashboard';\r\nimport StudentDashboard from './components/StudentDashboard';\r\nimport NameModal from './components/NameModal';\r\nimport ChatPopup from './components/ChatPopup';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const queryClient = useQueryClient();\r\n  const { persona, showNameModal } = useSelector((state) => state.ui);\r\n  const { currentStudent } = useSelector((state) => state.student);\r\n\r\n  useEffect(() => {\r\n    // Socket event listeners\r\n    socket.on('poll_created', (poll) => {\r\n      dispatch(setCurrentPoll(poll));\r\n      queryClient.invalidateQueries(['currentPoll']);\r\n    });\r\n\r\n    socket.on('current_poll', (data) => {\r\n      dispatch(setCurrentPoll(data.poll));\r\n      dispatch(setTimeRemaining(data.time_remaining));\r\n      queryClient.invalidateQueries(['currentPoll']);\r\n    });\r\n\r\n    socket.on('poll_results_updated', (data) => {\r\n      dispatch(updatePollResults(data));\r\n      queryClient.invalidateQueries(['currentPoll']);\r\n    });\r\n\r\n    socket.on('poll_ended', (data) => {\r\n      dispatch(pollEnded(data));\r\n      queryClient.invalidateQueries(['currentPoll']);\r\n      queryClient.invalidateQueries(['polls']);\r\n    });\r\n\r\n    socket.on('student_joined', (data) => {\r\n      dispatch(addStudent(data));\r\n      queryClient.invalidateQueries(['students']);\r\n    });\r\n\r\n    socket.on('student_left', (data) => {\r\n      dispatch(removeStudent(data));\r\n      queryClient.invalidateQueries(['students']);\r\n    });\r\n\r\n    socket.on('chat_message', (message) => {\r\n      dispatch(addMessage(message));\r\n      queryClient.invalidateQueries(['chatMessages']);\r\n    });\r\n\r\n    // Cleanup\r\n    return () => {\r\n      socket.off('poll_created');\r\n      socket.off('current_poll');\r\n      socket.off('poll_results_updated');\r\n      socket.off('poll_ended');\r\n      socket.off('student_joined');\r\n      socket.off('student_left');\r\n      socket.off('chat_message');\r\n    };\r\n  }, [dispatch, queryClient]);\r\n\r\n  if (!persona) {\r\n    return <PersonaSelector />;\r\n  }\r\n\r\n  if (persona === 'student' && !currentStudent && showNameModal) {\r\n    return <NameModal />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route\r\n          path=\"/teacher\"\r\n          element={\r\n            persona === 'teacher' ? (\r\n              <TeacherDashboard />\r\n            ) : (\r\n              <Navigate to=\"/\" replace />\r\n            )\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/student\"\r\n          element={\r\n            persona === 'student' ? (\r\n              <StudentDashboard />\r\n            ) : (\r\n              <Navigate to=\"/\" replace />\r\n            )\r\n          }\r\n        />\r\n        <Route path=\"/\" element={<Navigate to={`/${persona}`} replace />} />\r\n      </Routes>\r\n      <ChatPopup />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}